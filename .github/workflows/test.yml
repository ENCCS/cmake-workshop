name: Build and test examples

on:
  push:
    paths:
      - content/code/*
      - .github/workflows/test.yml
  pull_request:
    paths:
      - content/code/*
      - .github/workflows/test.yml

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
    - uses: actions/checkout@v2

    - name: Cache conda
      uses: actions/cache@v1
      env:
        CACHE_NUMBER: 0  # Increase this value to reset cache if .github/workshop.yml has not changed
      with:
        path: ~/conda_pkgs_dir
        key:
          ${{ matrix.os }}-conda-${{ env.CACHE_NUMBER }}-${{ hashFiles('.github/workshop.yml') }}

    - uses: conda-incubator/setup-miniconda@v2
      with:
          auto-update-conda: true
          auto-activate-base: false
          activate-environment: workshop
          environment-file: .github/workshop.yml
          channels: conda-forge,defaults
          channel-priority: true
          python-version: 3.8
          mamba-version: "*"
          use-only-tar-bz2: true  # IMPORTANT: This needs to be set for caching to work properly!
          
    - name: Select CMake CLI options
      shell: bash -l {0}
      run: |
        if [ "${{ matrix.os }}" != "windows-latest" ]; then
           echo "OPTS=-GNinja" >> $GITHUB_ENV
        else
           echo "OPTS=-Ax64" >> $GITHUB_ENV
        fi
      
    - name: Run examples
      shell: bash -l {0}
      run: |
        cd $GITHUB_WORKSPACE/content/code

        # select which examples to run on each platform
        if [ "${{ matrix.os }}" != "windows-latest" ]; then
           # exclude Fortran examples on Windows
           examples="$(find . -maxdepth 1 -mindepth 1 -type d -not -path './tarballs' -not -path './*-f' | xargs -L1 -I{} basename "{}")"
        else
           examples="$(find . -maxdepth 1 -mindepth 1 -type d -not -path './tarballs' | xargs -L1 -I{} basename "{}")"
        fi

        # run examples in a loop
        for x in $examples
        do
            echo ">>> Running example $x"
            cmake -S./"$x" -B./"$x"/build "$OPTS"
            cmake --build ./"$x"/build
            echo "<<< Done with example $x"
        done
